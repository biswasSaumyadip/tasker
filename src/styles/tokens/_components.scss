@use 'colors' as *;
@use 'spacing' as *;
@use 'typography' as *;
@use 'sass:map';
@use '../utils/functions' as fn;

// Card Component Tokens
$card: (
	padding: (
		sm: fn.spacing(4),
		md: fn.spacing(6),
		lg: fn.spacing(8),
	),
	radius: (
		sm: fn.spacing(1),
		md: fn.spacing(2),
		lg: fn.spacing(3),
	),
	shadow: (
		default: (
			0 1px 3px 0 rgba(0, 0, 0, 0.1),
			0 1px 2px -1px rgba(0, 0, 0, 0.1),
		),
		hover: (
			0 4px 6px -1px rgba(0, 0, 0, 0.1),
			0 2px 4px -2px rgba(0, 0, 0, 0.1),
		),
	),
);

// Button Component Tokens
$button: (
	padding: (
		sm: fn.spacing(2) fn.spacing(3),
		md: fn.spacing(3) fn.spacing(4),
		lg: fn.spacing(4) fn.spacing(6),
	),
	radius: (
		sm: fn.spacing(1),
		md: fn.spacing(2),
		lg: fn.spacing(3),
	),
	font-size: (
		sm: fn.font-size('sm'),
		md: fn.font-size('base'),
		lg: fn.font-size('lg'),
	),
	variants: (
		primary: (
			bg: fn.color-shade($indigo, 500),
			hover-bg: fn.color-shade($indigo, 600),
			text: white,
		),
		secondary: (
			bg: fn.color-shade($gray, 100),
			hover-bg: fn.color-shade($gray, 200),
			text: fn.color-shade($gray, 800),
		),
		danger: (
			bg: fn.color-shade($red, 500),
			hover-bg: fn.color-shade($red, 600),
			text: white,
		),
	),
);

// Input Component Tokens
$input: (
	padding: (
		sm: fn.spacing(2) fn.spacing(3),
		md: fn.spacing(3) fn.spacing(4),
		lg: fn.spacing(4) fn.spacing(6),
	),
	radius: (
		sm: fn.spacing(1),
		md: fn.spacing(2),
		lg: fn.spacing(3),
	),
	border-color: (
		default: fn.color-shade($gray, 200),
		focus: fn.color-shade($indigo, 500),
		error: fn.color-shade($red, 500),
	),
);

// Icon Component Tokens
$icon: (
	size: (
		xs: fn.spacing(4),
		sm: fn.spacing(5),
		md: fn.spacing(6),
		lg: fn.spacing(8),
	),
	color: (
		default: fn.color-shade($gray, 400),
		hover: fn.color-shade($gray, 600),
		active: fn.color-shade($indigo, 500),
	),
);

// Badge Component Tokens
$badge: (
	padding: fn.spacing(1) fn.spacing(2),
	font-size: fn.font-size('x'),
	radius: fn.spacing(1),
	font-weight: fn.font-weight(semibold),
	variants: (
		success: (
			bg: fn.color-shade($green, 100),
			color: fn.color-shade($green, 700),
		),
		warning: (
			bg: fn.color-shade($yellow, 100),
			color: fn.color-shade($yellow, 700),
		),
		error: (
			bg: fn.color-shade($red, 100),
			color: fn.color-shade($red, 700),
		),
		info: (
			bg: fn.color-shade($indigo, 100),
			color: fn.color-shade($indigo, 700),
		),
	),
);

// Dropdown Component Tokens
$dropdown: (
	padding: fn.spacing(2),
	max-height: fn.spacing(64),
	item-padding: fn.spacing(2) fn.spacing(3),
	radius: fn.spacing(2),
	border-color: fn.color-shade($gray, 200),
	shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
	states: (
		hover: (
			bg: fn.color-shade($gray, 100),
		),
		selected: (
			bg: fn.color-shade($indigo, 50),
			color: fn.color-shade($indigo, 500),
		),
		disabled: (
			opacity: 0.5,
		),
	),
);

// Sidebar Component Tokens
$sidebar: (
	width: (
		collapsed: fn.spacing(20),
		expanded: fn.spacing(64),
	),
	padding: fn.spacing(6),
	item: (
		padding: fn.spacing(3) fn.spacing(4),
		radius: fn.spacing(2),
		states: (
			default: (
				color: fn.color-shade($gray, 600),
				bg: transparent,
			),
			hover: (
				color: fn.color-shade($gray, 900),
				bg: fn.color-shade($gray, 50),
			),
			active: (
				color: fn.color-shade($indigo, 700),
				bg: fn.color-shade($indigo, 50),
			),
		),
	),
);

// Analytics Card Component Tokens
$analytics-card: (
	padding: fn.spacing(6),
	radius: fn.spacing(3),
	variants: (
		primary: (
			bg: fn.color-shade($indigo, 50),
			color: fn.color-shade($indigo, 700),
			accent: fn.color-shade($indigo, 500),
		),
		success: (
			bg: fn.color-shade($green, 50),
			color: fn.color-shade($green, 700),
			accent: fn.color-shade($green, 500),
		),
		indigo: (
			bg: fn.color-shade($indigo, 50),
			color: fn.color-shade($indigo, 700),
			accent: fn.color-shade($indigo, 500),
		),
	),
	title: (
		size: fn.font-size('2xl'),
		weight: fn.font-weight('medium'),
	),
);

// Interactive Component Tokens
$interactive: (
	focus-shadow: 0 0 0 3px rgba(fn.color-shade($indigo, 500), 0.1),
	transition: (
		duration: 0.2s,
		timing: ease,
	),
	hover: (
		transform: translateY(-2px),
		shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
	),
);

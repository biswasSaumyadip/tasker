@use '../tokens/colors' as *;
@use '../tokens/spacing' as *;
@use '../tokens/typography' as *;
@use 'sass:map';
@use '../utils/functions' as fn;
@use '../utils/component-functions' as comp;

@mixin visually-hidden {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border: 0;
}

@mixin line-clamp($lines) {
	display: -webkit-box;
	-webkit-line-clamp: $lines;
	-webkit-box-orient: vertical;
	overflow: hidden;
}

@mixin flex-center {
	display: flex;
	align-items: center;
	justify-content: center;
}

@mixin card-hover {
	transition:
		transform 0.2s ease,
		box-shadow 0.2s ease;
	&:hover {
		transform: translateY(-2px);
		box-shadow:
			0 4px 6px -1px rgba(0, 0, 0, 0.1),
			0 2px 4px -2px rgba(0, 0, 0, 0.1);
	}
}

@mixin interactive-element {
	$interactive: comp.get-interactive();

	transition: all 0.2s ease;
	cursor: pointer;
	&:focus {
		outline: none;
		box-shadow: comp.get-interactive('focus-shadow');
	}
}

@mixin truncate {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

@mixin card-base($size: 'md') {
	padding: comp.get-card('padding', $size);
	border-radius: comp.get-card('radius', $size);
	box-shadow: comp.get-card('shadow');
	background: white;
}

@mixin button-base($size: 'md', $variant: 'primary') {
	$button: comp.get-button($variant);

	padding: comp.get-button(null, 'padding', $size);
	border-radius: comp.get-button(null, 'radius', $size);
	font-size: comp.get-button(null, 'font-size', $size);
	font-weight: fn.font-weight('medium');
	background-color: comp.get-button($variant, 'bg');
	color: comp.get-button($variant, 'text');
	border: none;
	transition: all 0.2s ease;
	cursor: pointer;

	&:hover:not(:disabled) {
		background-color: comp.get-button($variant, 'hover-bg');
	}

	&:disabled {
		opacity: 0.5;
		cursor: not-allowed;
	}
}

@mixin input-base($size: 'md') {
	$input: comp.get-input();

	padding: comp.get-input('padding', $size);
	border-radius: comp.get-input('radius', $size);
	border: 1px solid comp.get-input('border-color', 'default');
	transition: all 0.2s ease;

	&:focus {
		outline: none;
		border-color: comp.get-input('border-color', 'focus');
		box-shadow: 0 0 0 3px rgba(fn.color-shade($indigo, 500), 0.1);
	}
}

@mixin badge($variant: 'info') {
	padding: comp.get-badge(null, 'padding');
	font-size: comp.get-badge(null, 'font-size');
	border-radius: comp.get-badge(null, 'radius');
	background: comp.get-badge($variant, 'bg');
	color: comp.get-badge($variant, 'color');
	font-weight: fn.font-weight('medium');
}

@mixin analytics-card($variant: 'primary') {
	background-color: comp.get-analytics($variant, 'bg');
	color: comp.get-analytics($variant, 'color');
	padding: comp.get-analytics(null, 'padding');
	border-radius: comp.get-analytics(null, 'radius');
	transition: transform 0.2s ease;

	&:hover {
		transform: translateY(-2px);
		box-shadow: comp.get-analytics($variant, 'shadow');
	}
}

@mixin flex-column($gap: spacing(4)) {
	display: flex;
	flex-direction: column;
	gap: $gap;
}

@mixin flex-between($gap: spacing(4)) {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: $gap;
}

@mixin flex-around($gap: spacing(4)) {
	display: flex;
	align-items: center;
	justify-content: space-around;
	gap: $gap;
}

@mixin flex-row($gap: spacing(4)) {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: $gap;
}

@mixin profile-picture($size) {
	width: $size;
	height: $size;
	border-radius: 50%;
	object-fit: cover;
	display: inline-block;
}
